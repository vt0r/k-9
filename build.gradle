buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:0.12.2'
  }
}

apply plugin: 'com.android.application'

dependencies {
  compile project(':plugins:Android-PullToRefresh:library')
  compile project(':plugins:ckChangeLog:library')
  compile project(':plugins:HoloColorPicker')
  compile project(':plugins:openpgp-api-library')
  compile 'com.android.support:support-v13:19.1.0'
  compile fileTree(dir: 'libs', include: '*.jar')
}

android {
  compileSdkVersion 19
  buildToolsVersion '20.0.0'

  final Console console = System.console();
  signingConfigs {
    releaseSigning {
      storeFile file(System.getenv("ANDROID_KEYSTORE"))
      keyAlias System.getenv("ANDROID_KEYALIAS")
      storePassword "FakePassword"
      keyPassword "FakePassword"
    }
  }

  task checkPasswords << {
    def keyStorePass = new String(console.readPassword("\nKeystore password: "))
    def keyPass  = new String(console.readPassword("Key password: "))
    android.signingConfigs.releaseSigning.storePassword = keyStorePass
    android.signingConfigs.releaseSigning.keyPassword = keyPass
  }

  tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "checkPasswords"
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.releaseSigning
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
    }

    androidTest {
      manifest.srcFile 'tests/AndroidManifest.xml'
      java.srcDirs = ['tests/src']
      assets.srcDirs = ['tests/assets']
    }
  }

  // Do not abort build if lint finds errors
  lintOptions {
    abortOnError false
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
  }
}

task testsOnJVM(type :GradleBuild, dependsOn: assemble) {
  buildFile = 'tests-on-jvm/build.gradle'
  tasks = ['test']
}
